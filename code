int left_motor_1=2;
int left_motor_2=3;
int right_motor_1=4;
int right_motor_2=5;
 
const int trig1 = 13;
const int echo1 = 12;
const int trig2 = 11;
const int echo2 = 10;
const int trig3 = 9;
const int echo3 = 8;

int distance1;
int distance2;
int distance3;
long duration;

void setup()
{ Serial.begin(9600);
  pinMode(2,OUTPUT);
  pinMode(3,OUTPUT);
  pinMode(4,OUTPUT);
  pinMode(5,OUTPUT);
 
  pinMode(trig1, OUTPUT);
  pinMode(echo1, INPUT);
  pinMode(trig2, OUTPUT);
  pinMode(echo2, INPUT);
  pinMode(trig3, OUTPUT);
  pinMode(echo3, INPUT);
}


void Stop() {
  digitalWrite(left_motor_1, LOW);
  digitalWrite(left_motor_2, LOW);
  digitalWrite(right_motor_1, LOW);
  digitalWrite(right_motor_2, LOW);
  Serial.println("Stop");
}

void Forward() {
  digitalWrite(left_motor_1, HIGH);
  digitalWrite(left_motor_2, LOW);
  digitalWrite(right_motor_1, HIGH);
  digitalWrite(right_motor_2, LOW);
  Serial.println("Forward");
}


void Left() {
  //left motor is moving anticlockwise
  digitalWrite(left_motor_1, HIGH);
  digitalWrite(left_motor_2, LOW);
  
  digitalWrite(right_motor_1, LOW);
  digitalWrite(right_motor_2, LOW);
  Serial.println("Left");
}


void Right() {
  digitalWrite(left_motor_1, LOW);
  digitalWrite(left_motor_2, LOW);
  //right motor is moving anticlockwise
  digitalWrite(right_motor_1, HIGH);
  digitalWrite(right_motor_2, LOW);
  Serial.println("Right");
}


void loop(){
  
 digitalWrite(trig1, LOW);
  delayMicroseconds(2000);
  digitalWrite(trig1, HIGH);
  delayMicroseconds(1000);
  digitalWrite(trig1, LOW);
  duration = pulseIn(echo1, HIGH);
  distance1 = duration * 0.034 / 2;
  
 digitalWrite(trig2, LOW);
  delayMicroseconds(2000);
  digitalWrite(trig2, HIGH);
  delayMicroseconds(1000);
  digitalWrite(trig2, LOW);
  duration = pulseIn(echo2, HIGH);
  distance2 = duration * 0.034 / 2;
  
digitalWrite(trig3, LOW);
  delayMicroseconds(2000);
  digitalWrite(trig3, HIGH);
  delayMicroseconds(1000);
  digitalWrite(trig3, LOW);
  duration = pulseIn(echo3, HIGH);
  distance3 = duration * 0.034 / 2;
  
   Serial.print("Distance1: "); Serial.println(distance1);
   Serial.print("Distance2: "); Serial.println(distance2);
   Serial.print("Distance3: "); Serial.println(distance3);


  // 14. Control movement based on distances
  if (distance1 < 10 || distance2 < 10 || distance3 < 10) {
    Stop();
    Serial.println("Obstacle too close stop");
    // If any sensor detects an obstacle too close, stop.
  }
  else if (distance1 < 50 && distance3 < 50) {
    Forward(); ;
    // If object in front of sensor 2 and sensor 3, move forward.
  }
  else if (distance2 < 50) {
    Forward(); 
    // If object in front, move forward.
    
  } 
  else if (distance1 < 50) {
    Left(); 
    Serial.println(" Close to sensor 2 move left");
      // If object to the left, turn left.  
  } 
  else if (distance3 < 50) {
    Right(); 
    Serial.println(" Close to sensor 3 move right");
    // If object to the right, turn right.
  } 
  else {
    Stop(); // Otherwise, stop (no object detected).
  }
}
